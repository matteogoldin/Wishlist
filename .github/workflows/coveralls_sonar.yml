name: CI code coverage e code quality

on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      workdir: wishlists

    name: Code coverage

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build with Maven and get code coverage and sonar analysis
        run: >
          xvfb-run mvn verify -Pcoveralls org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
          -Dsonar.projectKey=matteogoldin_Wishlist
          -DrepoToken=$COVERALLS_REPO_TOKEN
          -DpullRequest=${{ github.event.pull_request.number }}
        working-directory: ${{ env.workdir }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Generate JUnit report
        run: >
          mvn surefire-report:report-only site:site
          -DgenerateReports=false
        working-directory: ${{ env.workdir }}
        if: ${{ always() }}

      - name: Archive JUnit Report
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: surefire-report
          path: '**/target/site'
