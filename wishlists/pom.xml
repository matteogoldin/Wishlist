<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>attw.projects</groupId>
	<artifactId>wishlists</artifactId>
	<version>0.0.1</version>
	<name>wishlists</name>
	<description>A simple Java application for managing wishlists</description>

	<properties>
		<maven-assembly-plugin-version>3.6.0</maven-assembly-plugin-version>
		<docker-maven-plugin-version>0.43.4</docker-maven-plugin-version>
		<maven-javadoc-plugin-version>3.0.1</maven-javadoc-plugin-version>
		<maven-source-plugin-version>3.3.0</maven-source-plugin-version>
		<maven-compiler-plugin-version>3.11.0</maven-compiler-plugin-version>
		<build-helper-maven-plugin-version>3.4.0</build-helper-maven-plugin-version>
		<jaxb-api-version>2.3.1</jaxb-api-version>
		<coveralls-maven-plugin-version>4.3.0</coveralls-maven-plugin-version>
		<maven-site-plugin-version>3.12.1</maven-site-plugin-version>
		<maven-surefire-report-plugin-version>3.2.2</maven-surefire-report-plugin-version>
		<pitest-junit5-plugin-version>1.2.1</pitest-junit5-plugin-version>
		<pitest-maven-version>1.15.3</pitest-maven-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mockito.version>5.7.0</mockito.version>
		<testcontainer.version>1.19.1</testcontainer.version>
		<log4j.version>2.21.1</log4j.version>
		<junit5.version>5.10.1</junit5.version>
		<cucumber.version>7.14.1</cucumber.version>
		<assertj-swing.version>3.17.1</assertj-swing.version>
		<h2-database.version>2.2.224</h2-database.version>
		<my-sql-connector-java.version>8.0.33</my-sql-connector-java.version>
		<hibernate-core.version>6.3.0.Final</hibernate-core.version>
		<picocli-version>4.7.5</picocli-version>
		<jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>

		<!-- sonar properties -->
		<sonar.organization>matteogoldin</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<!-- code coverage exclusion-->
		<sonar.coverage.exclusions>**/model/*,**/app/*,**/utils/*</sonar.coverage.exclusions>
		<!-- duplication exclusion -->
		<sonar.cpd.exclusions>**/*SwingView.java</sonar.cpd.exclusions>
		<!-- Ignore rules -->
		<sonar.issue.ignore.multicriteria>e117,e2699,e3577</sonar.issue.ignore.multicriteria>
		<!-- naming convention variables -->
		<sonar.issue.ignore.multicriteria.e3577.ruleKey>java:S3577</sonar.issue.ignore.multicriteria.e3577.ruleKey>
		<sonar.issue.ignore.multicriteria.e3577.resourceKey>**/*E2E.java</sonar.issue.ignore.multicriteria.e3577.resourceKey>
		<!-- naming convenction classes -->
		<!-- naming convention -->
		<sonar.issue.ignore.multicriteria.e117.ruleKey>java:S117</sonar.issue.ignore.multicriteria.e117.ruleKey>
		<sonar.issue.ignore.multicriteria.e117.resourceKey>**/*SwingView.java</sonar.issue.ignore.multicriteria.e117.resourceKey>
		<!-- assertions in test classes -->
		<sonar.issue.ignore.multicriteria.e2699.ruleKey>java:S2699</sonar.issue.ignore.multicriteria.e2699.ruleKey>
		<sonar.issue.ignore.multicriteria.e2699.resourceKey>**/*Swing*.java</sonar.issue.ignore.multicriteria.e2699.resourceKey>
	</properties>

	<dependencies>
		<!-- Testing dependencies-->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit5.version}</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2-database.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Logging-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- ORM dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${my-sql-connector-java.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>
		<!-- Mockito-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- command line arguments -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli-version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- packages source code and dependencies -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin-version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>jar-with-dependencies</descriptorRef>
								</descriptorRefs>
								<archive>
									<manifest>
										<mainClass>app.WishlistApp</mainClass>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- computes code coverage -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/model/*</exclude>
							<exclude>**/app/*</exclude>
							<exclude>**/utils/*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- runs mutuation testing -->
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest-maven-version}</version>
					<dependencies>
						<dependency>
							<groupId>org.pitest</groupId>
							<artifactId>pitest-junit5-plugin</artifactId>
							<version>${pitest-junit5-plugin-version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<targetClasses>
							<param>businesslogic.*</param>
							<param>daos.*</param>
						</targetClasses>
						<targetTests>
							<param>businesslogic.*Test*</param>
							<param>daos.*Test*</param>
						</targetTests>
						<mutators>
							<mutator>ALL</mutator>
						</mutators>
						<mutationThreshold>90</mutationThreshold>
						<excludedMethods>
							<param>close</param>
							<param>transactionRollbackHandling</param>
						</excludedMethods>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin-version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin-version}</version>
				</plugin>
				<!-- integration with coveralls -->
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls-maven-plugin-version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${jaxb-api-version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- runs IT and E2E tests-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-surefire-report-plugin-version}</version>
					<executions>
						<execution>
							<id>it-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
						<execution>
							<id>e2e-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>**/*IT.java</exclude>
								</excludes>
								<includes>
									<include>**/*E2E.java</include>
								</includes>
							</configuration>
						</execution>
						<execution>
							<id>bdd-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>**/*IT.java</exclude>
								</excludes>
								<includes>
									<include>**/*BDD.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- adds and modifies project resources (i.e. source folder) -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin-version}</version>
					<executions>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/it/java</source>
									<source>src/e2e/java</source>
									<source>src/bdd/java</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-resource</id>
							<phase>generate-test-resources</phase>
							<goals>
								<goal>add-test-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/bdd/resources</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- compliles the source code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<release>11</release>
					</configuration>
				</plugin>
				<!-- creates a jar file containing the source code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin-version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- generates documentation -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin-version}</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- runs unit tests-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-report-plugin-version}</version>
				</plugin>
				<!-- manages docker containers -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin-version}</version>
					<configuration>
						<showLogs>true</showLogs>
						<verbose>build</verbose>
						<images>
							<image>
								<alias>database</alias>
								<name>mysql:8.0.33</name>
								<run>
									<wait>
										<log>mysqld: ready for connections</log>
										<time>30000</time>
									</wait>
									<env>
										<MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD>
										<MYSQL_DATABASE>wishlists-schema-it</MYSQL_DATABASE>
										<MYSQL_USER>java-client</MYSQL_USER>
										<MYSQL_PASSWORD>password</MYSQL_PASSWORD>
									</env>
									<ports>
										<port>3308:3306</port>
									</ports>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>docker:start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker:stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>pit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>